Процедура - функция с типом возвр зн void.

#include <iostream>//for cout(for C++ only)// char будет выведен именно буквами, а не численными значениями
using namespace std;// for cout(for C++ only)

#include<conio.h>// for _getch()
#include<conio.h>//for _getch()

RAND
#include<cstdlib>// for rand
#include<stdlib.h>// for srand
#include <time.h>
int random(int N) { return rand() % N; }
srand(NULL);
srand(time(NULL));//in main
int aa = 0, bb = 100, *arr, i = 0;
	arr[i++] = random(bb - aa + 1) + aa;
int i = srand();
	
	
разобрался наконец-то как это работает. 
Сюда подаётся N, которая представляет из себя отличие а от b. 
От rand() в итоге отсекается число* 
...пока могу думать только о положительных... так ранд только положительные и выдаёт...
*от нуля до b-a(например если а = -5,
b = 10, то rand() % N; выдаст число от нуля до 15. В вызывающем методе ещё прибавится а, т.е. -5.
Т.о. и выдаётся результат от -5 до 10.*/
a[i] = random(b - a + 1) + a;+++++ +1 нужен, видимо для включения границы b, иначе остатком выдавало бы
число меньшее b на 1.

p[i] = (float)rand()*(n - m) / RAND_MAX + m;


The Win32 templates have been renamed to Windows Desktop in Visual Studio

typedef struct st {
 struct st *next;
} slist;// slist просто ещё одно имя структуры в итоге(struct_alias в википедии)
это вроде как равносильно этому:
 struct st {
	struct st *next;
} ;
 typedef st slist;
 Вроде как небольшие отличия есть, но по Подбельскому/Фомину единственное отличие st и stlist(в обоих способах объявления)
 в том, что для выделения памяти под структуру можно писать struct st name; и stlist name; 
 Т.е. typedef просто позволяет избавиться от слова struct при инициализациях.

Visual Assist расширение для подсказок(есть только прбная версия(потом отключается))

По аналогии со стопкой тарелок начало списка называют основанием стека, а его конец — вершиной.


o(f), «о малое отf» обозначает «бесконечно малое относительно f»[1], пренебрежимо малую величину при рассмотренииf. Смысл термина «О большое» зависит от его области применения, но всегда g = O(f) растёт не быстрее, чемf (точные определения приведены ниже).

В частности:

фраза «сложность алгоритма естьO(f(n))» означает, что с увеличением параметра n, характеризующего количество входной информации алгоритма, время работы алгоритма будет возрастать не быстрее, чем некоторая константа, умноженная на f(n);
фраза «функция f(x) является „о“ малым от функцииg(x) в окрестности точки p» означает, что с приближением x к p f(x) уменьшается быстрее, g(x) (отношение|f(x)|/|g(x)|стремится к нулю).

char str[4] = {"e2e4"};
printf("%d", (int)str[1]);// Выдаст аски код цифры 2

Если выдаёт warning из-за использования deprecated функций:
Project->Properties->c/c++->Preprocessor->Добавить _CRT_SECURE_NO_WARNINGS; в Preprocessor Definitions
Так же может помочь #pragma warning(disable : 4996)

float *p; // указатель на вещественные числа 
 p=(float *) malloc(n*sizeof(float));// Выделяемпамять под n 
вещественных чисел;
 for (i=0;i<n;i++)
 Доступ существляется через p[i]
	
	Чтобы ввести строку через консоль cin>>str; не сработает(пробелы воспринимает как конец ввода). Нужно так
#include <iostream>
#include <string>
 string mystr;
 getline (cin, mystr);// хотя у меня так не сработало... сработало так:
 char text[200];
 cin.getline(text , 200);
 
#include <locale.h> 
setlocale (LC_ALL, "RUS"); 

int c;
int *p = &c;
Вот пример простой с присвоением указателю p адреса c.

Чтобы пользоваться внешней переменной без указания звёздочки:
void f(int &c){c=10;}

In Russian "parameters" are called "formal parameters", while "arguments" are called "actual parameters".
argument is the one you use it, while parameter is a blank to be filled in

void swap(int *xp, int *yp)
{
	int temp = *xp;
	*xp = *yp;
	*yp = temp;
}
swap(&arr[j], &arr[j + 1]);

void iswap(int &n1, int &n2) {
	int temp = n1;
	n1 = n2;
	n2 = temp;
}
iswap(a[i + sh], a[i * 2 + 2 + sh]);

tmp = arr[i];// самый простой способ
arr[i] = arr[j];
arr[j] = tmp;

QuickSort из методички работает

char **AddPtr (char **pp, int size, char *str); //прототип функции //Интересный прототип... без имени?

Бился с передачей массива указателей на указатели. Оказалось, что звёздочки должны быть впереди при передаче
void boardGeneration(char **a)
Хотя так тоже работало void boardGeneration(char a[][9]), но выдавало предупреждение при компиляции 
 note: expected 'char (*)[9]' but argument is of type 'char **'
 илиwarning: passing argument 1 of 'boardRenew' from incompatible pointer type [-Wincompatible-pointer-types]
 
 Notepad++ Опции-определение стиля-можно поменять цвет фона, текста
 
 Settings -> Preferences dialog control the way Notepad++ prints a document: Print - Colour and Margin and Print - Header and Footer.
The former lets you choose the four margins, in centimeters. There are also four colour schemes to choose from:
actual colours
inverted actual colours
black on white
actual foreground on white.

Нулевой символ(asci = 0?) автоматически добавляется в строку str после прочитанных символов, чтобы сигнализировать о конце строки.

Вот у Вас есть переменная int a. Это такая буковка, с помощью которой компилятор умеет определить, о чём Вы ему говорите. Он знает, что за буковкой a кроется значение в памяти, расположенное по какому-то адресу (адрес в памяти — это число). Ну, Вы же понимаете, что переменная — это такая штука, чтобы удобно по имени обращаться к данным, записанным в определённом участке памяти.

Так вот, указатель — это, тупо, то самое число, тот самый адрес. Т.е. &a равно именно в точности адресу в памяти, по которому хранится значение. Чтобы избежать невнятных проблем, тип «указатель на int (или на любой другой тип) — int*» — это такой совершенно отдельный тип.

Итак есть два волшебных оператора: * и &. Второй по данной переменной узнаёт её адрес в памяти. Первый по данному адресу (который, как мы помним, хранится в переменной типа int*) возвращает собственно данные, расположенные по этому адресу.




Натуральные числа a и b называют взаимно простыми, если их наибольший общий делитель равен 1

int Hash1(char(*arr)[8], int n);
char arr[n][8]; // двумерный массив статическое выделение памяти
Hash1(arr,n); // n - константа

mod = modulus = модуль

*& - это ссылка на указатель. Используется в С++ как альтернатива двойному указателю. К примеру, для инициализации указателя.
void someFunc(someType *& param) 
{
 someType * result = NULL;
 // Выполняем некоторые действия.
 param = result;
}
void someFunc(someType ** param) 
{
 someType * result = NULL;
 // Выполняем некоторые действия.
 *param = result;
}
Эти функции эквиваленты

(*ii).a эквивалентно ii->a  (конечно если ii - указатель)

чтобы винда после установки обновлений не переходила в спящий режим каждые 3 минуты нужно 
сбросить настройки сна до заводских (в продвинутых настройках). Также поставить значение 2 в regedit
HKEY_LOCAL_MACHINE > SYSTEM > CurrentControlSet > Control > Power > PowerSettings > 238C9FA8-0AAD-41ED-83F4-97BE242C8F20 > 7bc4a2f9-d8fc-4469-b07b-33eb785aaca0 Attributes 
потом всё равно в одной из настроек будет 2 минуты. Можно поменять на 0.

Чтобы в винде не сбивалось время из-за конфликта с линуксом в цмд написать:
Reg add HKLM\SYSTEM\CurrentControlSet\Control\TimeZoneInformation /v RealTimeIsUniversal /t REG_QWORD /d 1
sc config w32time start= disabled
чтобы отменить:
Reg add HKLM\SYSTEM\CurrentControlSet\Control\TimeZoneInformation /v RealTimeIsUniversal /t REG_DWORD /d 0
sc config w32time start= demand
https://losst.ru/sbivaetsya-vremya-v-ubuntu-i-windows
ну и ещё раз пришлось переустановить время после перезагрузки

Если выключается вместо перехода в спящий режим:
Зашел в параметры питания, вкладка Сон, Разрешить Гибридный сон (ВКЛ) и все, вуаля. 

build - папка для объектных временных файлов-кусочков для сборки программы
bin - папка для исполняемых файлов(.exe например)

1 семестр 2-го курса
Э + МАТЕМАТИКА
Э + МАТЕМАТИЧЕСКАЯ ЛОГИКА И ТЕОРИЯ АЛГОРИТМОВ
Э + ОБЪЕКТНО–ОРИЕНТИРОВАННОЕ ПРОГРАММИРОВАНИЕ
Э - САОД
  - ИНТЕРНЕТ ТЕХНОЛОГИИ
  + ЭЛЕКТРОТЕХНИКА, ЭЛЕКТРОНИКА, СХЕМОТЕХНИКА
  - физра
  + Экономика
Э + ИНОСТРАННЫЙ ЯЗЫК

2 семестр 2-го курса
2 семестр 2-го курса
Э СПЕЦИАЛЬНЫЕ ГЛАВЫ МАТЕМАТИЧЕСКОГО АНАЛИЗА
Э ТЕОРИЯ ВЕРОЯТНОСТИ  И МАТЕМАТИЧЕСКАЯ СТАТИСТИКА
Э ВЫЧИСЛИТЕЛЬНАЯ МАТЕМАТИКА
Э ЭЛЕКТРОТЕХНИКА, ЭЛЕКТРОНИКА И СХЕМОТЕХНИКА
Э АРХИТЕКТУРА ЭВМ
ВИЗУАЛЬНОЕ ПРОГРАММИРОВАНИЕ И ЧЕЛОВЕКО-МАШИННОЕ ВЗАИМОДЕЙСТВИЕ
РУССКИЙ ЯЗЫК И КУЛЬТУРА РЕЧИ
физра



Функция ceil(double x) округляет число x в большую сторону, а floor(doudle x) - в меньшую, 
round - математически правильное, trunc - отбросит дробную часть . Перед их использованием надо подключить заголовочный файл math.h
int m = ceil((5 + 5) / (double)3);//результат м = 4

HTML интернет технологии выбирать кодировку UTF-8 для сохранения html документов
Если в нотепад++ надоедает подсветка(в html) синтаксисы - выбрать для другого языка, Хаскел например

на 8гб флешке образ 18-й убунту ubuntu, 
на 2гб gparted(same as partition magic)//запускать отдельно gparted не получалось
Не запускать форматирование дисков в убунту, когда форматировщик не видит содержимого. Это уже удалило мою убунту.
// Правильный способ: //--Не сработало--
//1) В винде качаю образ gparted !live! version
//2) качаю unetbootin
//3) форматирую флешку в fat 32 
//4) запускаю unetbootin(прога для создания образов на флеш), выбираю вариант iso образ и указываю местоположение iso и имя флешки

Лучше не рисковать. С дисками долго разбираться и винду переустанавливать неохота.

Чтобы работал режим гибернации в убунту, видимо надо создавать свап диск размером с оперативку при разделении диска перед установкой убунты.
Для этого от свободного места отпиливаю, при этом выбираю swap area. Для установочного диска в поле mount должен быть просто слеш.

Если винда перестала загружаться, это не значит, что её надо переустанавливать(убедился на собственном опыте). Надо было просто ровнее установить убунту.

На старом компе для перехода в bios надо нажать f2

Если убунту не грузится после установки - проблема с GRUB (программка для линукса, позволяющая выбрать ось):
Запуск командной строки от имени администратора, ввожу bcdedit /set {bootmgr} path \EFI\ubuntu\grubx64.efi
готово. Взято с https://itsfoss.com/no-grub-windows-linux/

https://www.partitionwizard.com/download.html единственное, что помогло разделить диск для отделения места в виндовс виста под убунту

*& - это ссылка на указатель. Используется в С++ как альтернатива двойному указателю. К примеру, для инициализации указателя.
void someFunc(someType *& param) 
{
    someType * result = NULL;
    // Выполняем некоторые действия.
    param = result;
}
void someFunc(someType ** param) 
{
    someType * result = NULL;
    // Выполняем некоторые действия.
    *param = result;
}
Эти функции эквиваленты.// т.е. это *& используется чтобы не писать звёздочку перед сслыками в коде

<!-- text --> комментарий для HTML // also works

Для подключения графики SFML: https://www.youtube.com/watch?v=w339OWGlSo0&list=LLGo7Lb_DJ4_5SABWFqT616Q
В принципе можно не тратить эти 10 минут на настройку, а просто скопировать папку с готовым проектом... Ну и библиотеки на E должны лежать в том же месте.

Debug - windows - locals or autos - показывает состояние всех переменных

FILE *fp;
	fopen_s(&fp, "testBase3.dat", "rb");// так в виже открывается объект файл
	
	system("PAUSE");//выводит на экран "Для продолжения нажмите любую клавишу . . ."
	
#include <limits>	
	cin.ignore(numeric_limits<streamsize>::max(), '\n');//cleans buffer to avoid scanf and cin cycling after second call
	//fflush(stdin);//these suppose to do the same, but didn't help me
	//_flushall();
	//cin.clear();
	
	The difference between locals and autos in VS: 1) Locals only show members of a current piece of code; 2) Visual Studio determines which objects or variables are important for the current code statement and based on that, it lists down the “Autos” variable.  Generally this shows the object in  current statement and the previous statement  with in that current scope.
	
	!NULL == true
	
	int a = 9;
	&a //получит адрес переменной а
	
	http://manaeff.ru/forum/viewtopic.php?f=26&t=1369 настройка графики в деве graphics.h
	http://kpolyakov.spb.ru/school/c/faq.htm
	
The <div> tag defines a division or a section in an HTML document.
The <div> element is often used as a container for other HTML elements to style them with CSS or to perform certain tasks with JavaScript.
	
Функция c_str() возвращает указатель на символьный массив, который содержит строку объекта  стринг (string) в том виде, в котором она размещалась бы, во встроенном строковом типе. Например:
std::string str;
const char* str2 = str.c_str();

dev cpp tools - editor options - general - highlight current line; colors - changes a theme цвет

Оператор ~ побитовый NOT, он инвертирует биты в двоичном числе:

~ перед именем конструктора - это деструктор, он уничтожает экземпляр, освобождает память и т.д. и т.д.

В си++ только virtual функции могут быть переопределены в классах наследниках

Union - такая штука, которая выделяет память размером с самую большую переменную, объявленную в ней. В процессе использования в один момент времени объект юнион может хранить только одно из значений своих перемнных. В остальных переменных будет мусор(кусочки от использованной в данный момент переменной и неиспользуемые ею биты).

Статические поля и методы это не просто объявленные вот так 
size_t Box::getCounter() {
    return Box::counter;
}
они так же должны быть подписаны static

При создании объектов(при вызове конструкторов) сначала исполняются конструкторы базовых классов.
Деструкторы вызываются наоборот, сначала для производных классов.

Передача параметров в конструктор базового класса делается явно:
#include <iostream.h>>>><<<<<>>>>>>
class X {
protected:
int a;
public:
X (int i) ( a = i; )
};
class Y {
protected:
int b;
public:
У (int i) { b = i; }
};
// Z наследует как от X, так и от Y
class Z: public X, public Y {
public:
/* Инициализация X и Y через конструктор Z. Обратим внимание, что z на самом деле не использует х или у, но если потребуется, то может */
Z (int х, int у): X(x) , Y(y)//Вот так вот передаются параметры в базовый класс
{
cout << "Initializing\n";
}
int make_ab() { return a*b; }
};
int main()
{
Z i (10, 20);
cout << i.make_ab();
return 0;
}



* - asterisk
& - ampersand
https://stackoverflow.com/questions/57483/what-are-the-differences-between-a-pointer-variable-and-a-reference-variable-in/57492#57492
	int x = 0;
	int y = 0;
	int *pt = &x;
	int *q = &y;
	int **pp = &pt;
	int ***pq = &pp;
	pp = &q;//*pp = q
	**pp = 4;
	
поиск в курсаче по саоду работает если перед
 if (menu_key == '3') {
			system("CLS");
			char search_key[3];
поставить брейкпоинт
	
Проблема с пропуском строки _getch() была решена установкой пакетов с++ для вижуал студио.... хотя не совсем(я не выбирал никакие пакеты с плюсами, а просто обновление сделал и это помогло). Проект был не мой, у него все поля красные были замаркированы. Надо всегда создавать пустой проект без stdafx и прочей фигни. Это решает вышеописанную проблему(абзац выше) без брейкпоинта.

windows +, windows esc - включение/выключение экранной лупы

break выходит из цикла, причём из ближайшего, т.о. циклы, в которых был цикл с брейком всё равно продолжатся.

Folder Find Text - правая кнопка мыши по папке, чтобы найти текст внутри файлов

&= короткая запись для побитового и; ~ побитовое НЕ (унарный оператор(для одного операнда))

|	ИЛИ (логическое сложение)
^	Исключающее ИЛИ(если одинаковые - ноль, разные один) то же, что крестик в кружке
~	Дополнение
>>	Сдвиг вправо
<<	Сдвиг влево Например x << y	Все биты в x смещаются влево на y бит

#define OVERFLOW 0x1 //определение макроса. В последующем при использовании OVERFLOW будет выдаваться последовательность символов 0x1

Как получилось сделать Makefile на убунту: установил gcc, g++, cmake; создал CMakeLists.txt, уж не знаю нужно было или нет, прописал в терминале: cmake -DNAME_OF_SETTING=VALUE , готово

Как Диман объяснил надо делать на убунту:
Создаётся файл CMakeLists.txt, folder named cmake_dir, go there, enter "cmake .."  , ls watch whats there, enter "make", go to a folder, search for labs file, launch it. It has to start working.

Contents of CMakeLists.txt:
cmake_minimum_required(VERSION 3.10)
project(labs C)

set(CMAKE_C_STANDARD 11)

add_executable(labs main.c vm.c vm.h)

There is a cool option - paste the CMakeLists.txt in Templates folder. After that it is possible to create new CMakeLists.txt with a couple of clicks.


Возможно писать программы будет проще, если вместо абстрактных переменных я сначала буду прописывать конкретные переменные или сразу числа

Рубану лабы сдавать чтобы подробно выводились все шаги.

Ctrl+Alt+L - Reformat code
IntelliJ IDEA Default Keymap.pdf

Ctrl+k, Ctrl+D text formatting in Visual Studio выровнять текст в виже

Чтобы комбинация class Smth extends Application, start @Override public void start(Stage stage){, psvm(...){launch(args); 
работала class должен быть публичным. См пример ВМ L5Graphics

@Override  просто показывает, что метод переопределяет метод суперкласса... Вроде компиллятор это видит и как-то реагирует

В джаве всё на ссылках, поэтому для копирования объекта, а не ссылки используется функция clone()

Java external library adding - добавление внешней библиотеки - Создаю новую папку lib в корне, кидаю туда jar файл, жму на нём правой кнопкой, выбираю add as library

https://www.onlinedocumentviewer.com нормально открывает файлы по вычмату
https://www.pdfexport.net конвертирует в быстрые файлы(только на почту gmail.com)