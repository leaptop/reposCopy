Лабораторная работа № 8

Структуры

1. Цель работы: Приобретение практических навыков в составлении алгоритмов и программ со структурами.

2.  Основные сведения

Структура  – это фиксированное число элементов одного или нескольких типов. Т.е. в  отличие от массивов, в которых содержатся элементы одного типа, в структурах могут содержаться элементы как одного, так и разных типов.  Элементами структуры могут быть базовые типы, массивы, указатели, другие структуры  и т.д. Элементы структуры вместе с их описанием называются полями. Над полями можно выполнять действия, допустимые для данных этого типа. 
Все структуры должны быть описаны до использования. Все имена полей в структуре должны быть различными. 
Например, переменную типа структуры  Воок можно описать следующим образом:
struct   card {char аuthor [15]; char title[20];  int   year ; float   cena;}  Book;
или 
struct card {char аuthor [15];char title[20]; int  year; float  cena;}; 
stuct card Book;
	Тип структуры (например, card) вводит только шаблон  и с его именем не связан никакой конкретный объект. Объект (например, структура Book) должен быть также объявлен. Обращение к полю структуры выполняется с помощью составного имени, которое состоит из <имени структуры> <точка>        <имени поля>. Например, присвоить значения элементам записи Author и Title можно так: 
  
#include <stdio.h>
#include <conio.h>
#include <stdlib.h>
#include <string.h>
main()
{ struct card {char author[40]; char title[40]; int  year; float  cena;}; 
  struct card Book;
  strcpy(Book.author, "Довгаль С.И."); 
  strcpy(Book.title,"Турбо Паскаль V 7.0");
  Book.year=2003;
  Book.cena=125;
  printf("%s %s %d год цена %5.2f",Book.title,Book.author,Book.year,Book.cena);
  getch();
  return 0;
}  

Можно создавать массив структур:
 Struct card bibl[100];
Обращение к полю элемента массива: bibl[i].title;

Пример: Дана информация о 10 товарах: название, цена, количество. Вычислить общую стоимость товара, название которого вводится с клавиатуры. 

#include <stdio.h>
#include <conio.h>
#include <string.h>
#define n 10
main()
{
   int i,k; float sum; //k-количество искомых товаров, sum- их общая стоимость.
  struct tov {char name[10]; float c; int kol;} t;  //Объявление структуры t
  struct tov mag[n];  //объявление массива структур mag[n]
  char nazv[10]; //Наименование искомого товара
  printf(“\n Введите информацию о товарах \n“);
  for (i=0;i<n;i++)
  {   printf("\n  наименование , цена, количество :  ");
     scanf("%s%f%d",&t.name,&t.c,&t.kol);//Заполнение информацией структуры t
      mag[i]=t; //Присвоение i-му элементу массива структуры t целиком
  }
  printf("\n введите искомый товар:  ");
  scanf("%s",&nazv);
  for (i=0,sum=0,k=0;i<n;i++)
      if (strcmp(mag[i].name,nazv)==0)
      {  sum+=mag[i].c*mag[i].kol;
         k++;
      }
  printf("Товаров  %s   %d,  их стоимость  %5.2f ",nazv,k, sum);
  getch();
}

3. Выполнение работы
 
    1. Дана информация о  школах города. Запись имеет вид: номер школы, количество выпускников школы, число поступивших в ВУЗ. Сформировать массив из записей и отсортировать его с помощью индексного масссива по количеству поступивших в ВУЗы. Вывести данные о количестве выпускников по каждой школе и доле поступивших в ВУЗ.

    2. Дана информация о комнатах в общежитии. Запись имеет вид: номер комнаты, площадь комнаты, факультет, количество проживающих. Вывести данные по факультетам о  количестве комнат, количестве студентов и средней площади на одного студента. Названия и количество факультетов заранее не известны  (их можно занести в отдельный массив по введенным данным).

4. Контрольные вопросы

4.1. Какие типы данных относятся к простым, а какие к составным?
4.2. Как объявляются структуры, и чем отличается структура от массива?
4.3  Как обращаться к полям структуры?
4.3. Какие операции допустимы над структурой в целом?


