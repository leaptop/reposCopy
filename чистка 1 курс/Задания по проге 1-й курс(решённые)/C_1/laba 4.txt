	 Лабораторная работа   №4

Двумерные динамические массивы  

1.  Цель работы: приобретение навыков работы с динамическими матрицами

    2. Основные сведения

Для выделения памяти под одномерный массив (например, массив целых чисел) нам требуется указатель на целые числа int *b; Для матрицы надо объявить указатель на массив указателей на целые числа (т.е на массив указателей на начало каждой строки), который объявляется как  int **a;  Вначале рассмотрим более простой способ выделения памяти под такую матрицу, когда размер строки матрицы известен, а неизвестно только количество строк. Тогда можно ввести новый тип данных – строка матрицы. Когда количество строк будет введено, с помощью оператора new, или функций malloc(), calloc() выделяем  память под одномерный массив данных типа «строка».
Пусть требуется записать в динамическую матрицу, в которой заранее известна только длина строки, а количество строк вводится во время выполнения программы, случайные числа. Вычислить суммы строк и записать их в динамический одномерный массив.

#include <stdio.h>
#include <stdlib.h>
const int n=5; // количество элементов в строке
typedef int rown[n];//rown - новый тип: массив (строка) из n целых чисел

main()
{
 int i,j,m;
 rown *a; // указатель на строку
 int *b;   // указатель на целое
 printf ( "Число строк?  ");
 scanf ( "%d", &m );
 a = new rown[m]; // выделяем память под матрицу по адресу a, m строк
                                // по n элементов в строке 
if ( a == NULL ) 
{   printf("Не удалось выделить память");
    return 1; // выход по ошибке, код ошибки 1
}
b=new int[m]; // выделяем память под массив сумм строк (m строк)
if ( b == NULL ) 
{   printf("Не удалось выделить память");
    return 1; // выход по ошибке, код ошибки 1
}
// заполняем матрицу случайными числами
  for (i=0; i<m; i++)
 {  for (j=0; j<n; j++)
    { a[i][j]=rand()%11;
      printf("%4d",a[i][j]);
    }
    puts("\n");
 } 
// записываем в массив b суммы строк матрицы
 for (i=0; i<m; i++)
 {   b[i]=0;
     for (j=0; j<n; j++) 
         b[i]+=a[i][j];  
 }
 puts("\n");
  for (j=0; j<n; j++)
     printf("%4d",b[j]);           
 delete a; // освобождаем память, занятую под матрицу a
 delete b; // освобождаем память, занятую под массив b  
 puts("\n");
 system("PAUSE");
 return 0;
}

    3. Выполнение работы
Выполнить следующие задания, используя оператор new и функцию malloc().
1.Задан двумерный динамический массив B  размерности m x n. (n=5, m вводить с клавиатуры). Заполнить её случайными числами. Получить новую динамическую матрицу С[m-1][n-1]  путем удаления из В строки и столбца, в которых содержится максимальный элемент исходной матрицы.

2. Задан двумерный динамический массив А  размерности   m x n. ( m и n вводить с клавиатуры).    Заполнить его случайными числами.  Создать массив D  размером m+1 на  n+1, в который записать элементы массива А и суммы элементов соответствующих строк и столбцов исходного массива А.  В элемент D[m+1][n+1] поместить сумму всех элементов исходного массива.




    4. Контрольные вопросы

        1. Как выделить память под двумерный динамический массив при заранее известной  длине строки?
        2. Как задать новый тип «массив»?
        3. Как освободить динамическую память, выделенную под матрицу?
        4. Какое значение будет иметь указатель после освобождения памяти?
