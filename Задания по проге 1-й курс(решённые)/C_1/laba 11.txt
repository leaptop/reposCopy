Лабораторная   работа  № 11
Обработка бинарных файлов 

1. ЦЕЛЬ РАБОТЫ:  приобретение практических навыков создания и обработки  бинарных файлов.

2.   ОСНОВНЫЕ  ПОНЯТИЯ

Если файл открыт в бинарном режиме, его можно записывать или считывать побайтно. Функция fseek() позволяет обращаться с файлом как с массивом и  переходить к любой позиции в файле, обеспечивая возможность произвольного доступа. Если текстовые файлы являются файлами  с последовательным доступом, то произвольный доступ чаще всего применяется к бинарным файлам. 	      
Бинарные файлы могут содержать любую  информацию. Чаще  всего используются  файлы, содержащие  структуры. Для чтения и записи в бинарные файлы можно  использовать функции fread(), fwrite() или fscanf(),fprintf(). 
fread –функция для чтения из файла:  
int fread(void *ptr, unsigned size, unsigned count, FILE *f);
Из файла f считываются и по адресу ptr записываются  count элементов размером size каждый. Функция возвращает число фактически считанных элементов.
fwrite – функция для записи в файл:
int fwrite(void *ptr, unsigned size, unsigned count, FILE *f);
В файл записываются, начиная с адреса ptr, count элементов размером size каждый. Функция возвращает число фактически записанных элементов.
fseek – функция для произвольного доступа к байтам бинарных файлов:
int  fseek(FILE *f, long offset, int w);
offset показывает, на сколько байт нужно сместиться относительно точки отсчёта – w.                             
w  должно быть равно одной из трех констант: 
SEEK_SET или 0 - начало файла;  
SEEK_CUR или 1 – текущая позиция в файле;  
SEEK_END или 2 – конец файла. 
ftell - возвращает текущую позицию в файле как длинное целое:
long int ftell (FILE *f);  

Пример  обработки бинарного файла

Составить программу, выполняющую следующие функции:
    1. Создание нового файла;
    2. Просмотр файла;
    3. Добавление информации в конец файла;
    4. Поиск по названию товара;
Файл создать из  структур вида: название товара, его цена и количество. 
Задание выполнить в  отдельных  функциях. Использовать меню для выбора функций.

#include <stdio.h>
#include <conio.h>
#include <string.h>
#include <stdlib.h>

struct tov {char name[10]; float c; int kol;} t1;
void input(FILE *); // создание нового файла
void print(FILE *); // просмотр файла
void app(FILE *); // добавление в файл
void find(FILE *); // поиск и изменение 
main()
{ char c;
  FILE *tf;
  while (1)
  { system(“CLS”);
    puts("  1 – новый файл");
    puts("  2 – просмотр файла");
    puts("  3 – добавление в файл");
    puts("  4 – поиск ");
    puts("  0 - выход");
    c=getch();
    switch(c)
    { case '1':input(tf);break;
      case '2':print(tf);break;
      case '3':app(tf);break;
      case '4':find(tf);break;
      case '0':return 0;
      default : puts(" неверный режим");
     }
  }
}
void input(FILE *tf)
{ char ch;
  tf=fopen("file1.dat","wb"); // открытие бинарного файла для записи
  system(“CLS”);
  printf("\n Ввод товаров\n");
  do
  { printf("\n название: "); scanf("%s",&t1.name);
    printf(" цена: "); scanf("%f",&t1.c);
    printf(" количество: "); scanf("%d",&t1.kol);
    fwrite(&t1,sizeof(t1),1,tf); // запись в файл одной структуры t1
    printf("\n Закончить?  y/n  ");
    ch=getch();
  }
  while (ch != 'y');
  fclose(tf);
}
void print(FILE *tf)
{ int i;
  system(“CLS”);
  tf=fopen("file1.dat","rb"); // открытие бинарного файла для чтения
  i=1;
  fread(&t1,sizeof(t1),1,tf); // чтение из файла одной структуры t1
  while (!feof(tf))
  { printf("\n  %3d tovar %10s cena %6.2f kolic %4d",i,t1.name,t1.c,t1.kol);
    fread(&t1,sizeof(t1),1,tf);
    i++;
  }
  getch();
}
void app(FILE *tf)
{ char ch;
  tf=fopen("file1.dat","ab"); // открытие бинарного файла для добавления
  system(“CLS”);
  printf("\n  Ввод товаров \n");
  do
  {  printf("\n название: "); scanf("%s",&t1.name);
    printf(" цена: "); scanf("%f",&t1.c);
    printf(" количество: "); scanf("%d",&t1.kol);
    fwrite(&t1,sizeof(t1),1,tf);
    printf(" Закончить?  y/n ");
    ch=getch();
  }
  while (ch != 'y');
  fclose(tf);
}
void find(FILE *tf)
{ char c,tov[10];
  tf=fopen("file1.dat","rb+"); // открытие бинарного файла для чтения и записи
  system(“CLS”);
  puts(" Название искомого товара: ");
  gets(tov);
  fread(&t1,sizeof(t1),1,tf);
  while (!feof(tf))
  {  if (strcmp(t1.name,tov)==0)
     {
        printf(" tovar %10s cena %6.2f kolic %d",t1.name,t1.c,t1.kol);
         getch();
      }  
      fread(&t1,sizeof(t1),1,tf);
  }
  fclose(tf);
}

3. ВЫПОЛНЕНИЕ РАБОТЫ

Запись имеет вид: ФИО пассажира, количество занимаемых багажом мест, общий вес вещей. Используя функции и режим меню: 
а) создать  файл из N записей;
б) просмотреть файл;
в) добавить в конец файла новую запись;
г) найти и удалить из файла записи о пассажирах, общий вес вещей  которых   меньше, чем 10 кг.


4. КОНТРОЛЬНЫЕ ВОПРОСЫ

        4.1. Режимы доступа к файлам.
        4.2. Как создать бинарный файл?
        4.3. Назначение функций fseek, ftell.
        4.4. Как создать бинарный файл?


